/*
 * Swagger Schmettr
 *
 * This is the schmettr server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.ComponentModel.DataAnnotations;
using Domain.Dtos;
using Microsoft.AspNetCore.Mvc;
using Persistence.Interfaces;
using Services.Exceptions;
using Services.Interfaces;
using Swashbuckle.AspNetCore.Annotations;
using Web.Attributes;

namespace Web.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CategoryApi : ControllerBase
    {
        private readonly ICategoryService _categoryService;

        public CategoryApi(ICategoryService categoryService)
        {
            _categoryService = categoryService;
        }

        /// <summary>
        /// Add a new category
        /// </summary>
        /// <param name="body">Comment object that needs to be added to the message</param>
        /// <param name="messageId">ID of message to return</param>
        /// <response code="405">Invalid input</response>
        [HttpPost]
        [Route("/schmettr/schmettr/1.0.0/categories/")]
        [ValidateModelState]
        [SwaggerOperation("AddCategory")]
        public virtual IActionResult AddCategories([FromBody]CategoryCreateDto body)
        {
            try
            {
                var categoryDto = _categoryService.Create(body);
                return Ok(categoryDto);
            }
            catch (Exception e)
            {
                return Problem(e.Message);
            }
        }

        
        /// <summary>
        /// Get all Categories
        /// </summary>
        /// <response code="405">Invalid input</response>
        [HttpGet]
        [Route("/schmettr/schmettr/1.0.0/categories")]
        [ValidateModelState]
        [SwaggerOperation("GetCategories")]
        public virtual IActionResult GetCategories()
        {
            try
            {
                var categoriesDto = _categoryService.GetAll();
                return Ok(categoriesDto);
            }
            catch (Exception e)
            {
                return Problem(e.Message);
            }
        }
    }
}
